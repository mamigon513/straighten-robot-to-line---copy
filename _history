{"entries":[{"timestamp":1744219474095,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"20\" y=\"20\""],[0,"></b"]],"start1":67,"start2":67,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"basic.forever(function on_forever() {\n    \n})\ncontrol.inBackground(function onIn_background() {\n    \n    //  get the line tracking offset\n    let error = CutebotPro.getOffset()\n    //  detects black line\n    if (Math.abs(error) > 3000) {\n        //  turn on headlights(pink = 247, 25, 236)\n        CutebotPro.singleHeadlights(CutebotProRGBLight.RGBL, 247, 25, 236)\n        CutebotPro.singleHeadlights(CutebotProRGBLight.RGBR, 247, 25, 236)\n        while (error != 0) {\n            if (error > 0) {\n                error = CutebotPro.getOffset()\n            }\n            \n        }\n    }\n    \n})"],[0,"\n"]],"start1":0,"start2":0,"length1":596,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"pxt-cutebotpro\": \"github:elecfreaks/pxt-cutebot-pro#v2.1.0\""],[0,"\n   "]],"start1":151,"start2":151,"length1":78,"length2":8},{"diffs":[[0,".md\""],[-1,",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\""],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":235,"start2":235,"length1":64,"length2":44}]},{"type":"added","filename":"main.py","value":"def on_forever():\n    pass\nbasic.forever(on_forever)\n\ndef onIn_background():\n    pass\n    # get the line tracking offset\n    error = CutebotPro.get_offset()\n    \n    # detects black line\n    if abs(error) > 3000:\n        # turn on headlights(pink = 247, 25, 236)\n        CutebotPro.single_headlights(CutebotProRGBLight.RGBL, 247, 25, 236)\n        CutebotPro.single_headlights(CutebotProRGBLight.RGBR, 247, 25, 236)\n        while(error != 0):\n            # too far left\n            if error > 0:            \n        error = CutebotPro.get_offset()\n\ncontrol.in_background(onIn_background)"}]},{"timestamp":1744219957545,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n})\n"],[-1,"CutebotPro.pwmCruiseControl(0, 0)\n"],[0,"cont"]],"start1":42,"start2":42,"length1":42,"length2":8},{"diffs":[[0,") {\n"],[-1,"    let speed: number;\n"],[0,"    "]],"start1":92,"start2":92,"length1":31,"length2":8},{"diffs":[[0,"    "],[-1,"speed = error / 3000 * 30\n            //  too far left\n            if (error > 0) {\n                CutebotPro.pwmCruiseControl(speed, -1 * speed)\n            }\n            \n            //  too far right\n            if (error < 0) {\n                CutebotPro.pwmCruiseControl(-1 * speed, speed)\n            }\n            \n        }\n        error = CutebotPro.getOffset()"],[1,"if (error > 0) {\n                error = CutebotPro.getOffset()\n            }\n            \n        }"],[0,"\n   "]],"start1":477,"start2":477,"length1":379,"length2":108}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"0):\n"],[-1,"            speed = (error/3000)*30\n"],[0,"    "]],"start1":438,"start2":438,"length1":44,"length2":8},{"diffs":[[0,"ror > 0:"],[-1,"\n"],[0,"        "]],"start1":486,"start2":486,"length1":17,"length2":16},{"diffs":[[0,"    "],[-1,"    CutebotPro.pwm_cruise_control(speed, -1*speed)\n            # too far right\n            if error < 0:\n                CutebotPro.pwm_cruise_control(-1*speed, speed)\n        error = CutebotPro.get_offset()\n        \nCutebotPro.pwm_cruise_control(0, 0)"],[1,"\n        error = CutebotPro.get_offset()\n"],[0,"\ncon"]],"start1":502,"start2":502,"length1":260,"length2":49}]}]},{"timestamp":1744220549846,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"CutebotPro.pwmCruiseControl(10, 10)\n"],[0,"basi"]],"start1":0,"start2":0,"length1":40,"length2":4},{"diffs":[[0,"_forever"],[-1,"2"],[0,"() {\n   "]],"start1":25,"start2":25,"length1":17,"length2":16},{"diffs":[[0,") {\n    "],[1,"\n})\nCutebotPro.pwmCruiseControl(0, 0)\n"],[0,"control."]],"start1":34,"start2":34,"length1":16,"length2":54},{"diffs":[[0,"kground() {\n"],[-1,"    "],[0,"    let spee"]],"start1":118,"start2":118,"length1":28,"length2":24},{"diffs":[[0,"number;\n    "],[-1,"  "],[-1,"  \n    "],[1,"\n"],[0,"    //  get "]],"start1":145,"start2":145,"length1":33,"length2":25},{"diffs":[[0,"set\n    "],[-1," "],[-1,"   "],[0,"let erro"]],"start1":191,"start2":191,"length1":20,"length2":16},{"diffs":[[0,"ffset()\n    "],[-1,"   "],[-1," "],[0,"//  detects "]],"start1":226,"start2":226,"length1":28,"length2":24},{"diffs":[[0,"ck line\n"],[-1,"    "],[0,"    if ("]],"start1":253,"start2":253,"length1":20,"length2":16},{"diffs":[[0,"(error) "],[-1,"<"],[1,">"],[0," 3000) {"]],"start1":277,"start2":277,"length1":17,"length2":17},{"diffs":[[0,") {\n"],[-1,"            CutebotPro.pwmCruiseControl(0, 0)\n            basic.pause(100)\n    "],[0,"    "]],"start1":291,"start2":291,"length1":87,"length2":8},{"diffs":[[0,"= 247, 25, 236)\n"],[-1,"    "],[0,"        CutebotP"]],"start1":331,"start2":331,"length1":36,"length2":32},{"diffs":[[0,", 247, 25, 236)\n"],[-1,"    "],[0,"        CutebotP"]],"start1":406,"start2":406,"length1":36,"length2":32},{"diffs":[[0,"36)\n"],[-1,"            // keep turning till we are straight\n    "],[0,"    "]],"start1":493,"start2":493,"length1":61,"length2":8},{"diffs":[[0,"        "],[-1,"    "],[0,"speed = "]],"start1":530,"start2":530,"length1":20,"length2":16},{"diffs":[[0," 30\n            "],[-1,"   "],[-1," "],[0,"//  too far left"]],"start1":560,"start2":560,"length1":36,"length2":32},{"diffs":[[0,"ar left\n"],[-1,"    "],[0,"        "]],"start1":585,"start2":585,"length1":20,"length2":16},{"diffs":[[0,"                "],[-1,"  "],[-1,"  "],[0,"CutebotPro.pwmCr"]],"start1":622,"start2":622,"length1":36,"length2":32},{"diffs":[[0,"ed)\n            "],[-1,"    "],[0,"}\n              "]],"start1":681,"start2":681,"length1":36,"length2":32},{"diffs":[[0,"            "],[-1,"    \n   "],[1,"\n"],[0,"            "]],"start1":699,"start2":699,"length1":32,"length2":25},{"diffs":[[0,"   \n            "],[-1," "],[0,"//  too far righ"]],"start1":708,"start2":708,"length1":33,"length2":32},{"diffs":[[0,"ght\n            "],[-1,"    "],[0,"if (error < 0) {"]],"start1":738,"start2":738,"length1":36,"length2":32},{"diffs":[[0,"rror < 0) {\n"],[-1,"    "],[0,"            "]],"start1":759,"start2":759,"length1":28,"length2":24},{"diffs":[[0,"ed)\n            "],[-1,"    "],[0,"}\n              "]],"start1":830,"start2":830,"length1":36,"length2":32},{"diffs":[[0,"  }\n            "],[-1," "],[-1,"   "],[0,"\n               "]],"start1":844,"start2":844,"length1":36,"length2":32},{"diffs":[[0,"    "],[-1,"        basic.pause(10)\n        "],[1,"}\n"],[0,"    "]],"start1":865,"start2":865,"length1":40,"length2":10},{"diffs":[[0,"    "],[1,"}\n"],[0,"    "],[-1,"    }\n            //  go forward again\n            CutebotPro.pwmCruiseControl(10, 10)\n        }\n        \n    })"],[0,"\n})\n"]],"start1":910,"start2":910,"length1":124,"length2":14}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[1,"def on_forever():\n    pass\nbasic.forever(on_forever)\n\n"],[0,"def onIn_bac"]],"start1":0,"start2":0,"length1":12,"length2":66},{"diffs":[[0,"ckground():\n"],[-1,""],[0,"    pass\n   "]],"start1":65,"start2":65,"length1":24,"length2":24},{"diffs":[[0,"or) "],[-1,"<"],[1,">"],[0," 3000:\n"],[-1,"\n        CutebotPro.pwm_cruise_control(0, 0)\n        basic.pause(100)\n\n"],[0,"    "]],"start1":201,"start2":201,"length1":87,"length2":16},{"diffs":[[0,"36)\n"],[-1,"        #keep turning till we are straight\n"],[0,"    "]],"start1":411,"start2":411,"length1":51,"length2":8},{"diffs":[[0,"ed)\n"],[-1,"            basic.pause(10)\n    "],[0,"    "]],"start1":707,"start2":707,"length1":40,"length2":8},{"diffs":[[0,"    "],[-1,"# go forward again\n        "],[1,"\n"],[0,"Cute"]],"start1":755,"start2":755,"length1":35,"length2":9},{"diffs":[[0,"rol("],[-1,"1"],[0,"0, "],[-1,"1"],[0,"0)\n"],[-1,"\nCutebotPro.pwm_cruise_control(10, 10)\ndef on_forever2():\n    "],[0,"cont"]],"start1":786,"start2":786,"length1":78,"length2":14},{"diffs":[[0,"und)"],[-1,"\nbasic.forever(on_forever2)"]],"start1":830,"start2":830,"length1":31,"length2":4}]}]},{"timestamp":1744221141661,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[1,"CutebotPro.pwmCruiseControl(10, 10)\nbasic.forever(function on_forever2() {\n    control.inBackground("],[0,"function onIn_background() {"]],"start1":0,"start2":0,"length1":28,"length2":128},{"diffs":[[0,"und() {\n    "],[1,"    "],[0,"let speed: n"]],"start1":121,"start2":121,"length1":24,"length2":28},{"diffs":[[0,"number;\n    "],[-1,"\n"],[1,"    \n    "],[0,"    //  get "]],"start1":148,"start2":148,"length1":25,"length2":33},{"diffs":[[0," offset\n    "],[1,"    "],[0,"let error = "]],"start1":198,"start2":198,"length1":24,"length2":28},{"diffs":[[0,"getOffset()\n"],[1,"    "],[0,"    //  dete"]],"start1":237,"start2":237,"length1":24,"length2":28},{"diffs":[[0,"ck line\n"],[1,"    "],[0,"    if ("]],"start1":272,"start2":272,"length1":16,"length2":20},{"diffs":[[0,") < 3000) {\n"],[1,"    "],[0,"        Cute"]],"start1":306,"start2":306,"length1":24,"length2":28},{"diffs":[[0,"l(0, 0)\n        "],[1,"    "],[0,"basic.pause(100)"]],"start1":356,"start2":356,"length1":32,"length2":36},{"diffs":[[0,"se(100)\n        "],[1,"    "],[0,"//  turn on head"]],"start1":385,"start2":385,"length1":32,"length2":36},{"diffs":[[0,"= 247, 25, 236)\n"],[1,"    "],[0,"        CutebotP"]],"start1":433,"start2":433,"length1":32,"length2":36},{"diffs":[[0,"5, 236)\n        "],[1,"    "],[0,"CutebotPro.singl"]],"start1":520,"start2":520,"length1":32,"length2":36},{"diffs":[[0,"        "],[1,"    "],[0,"// keep "]],"start1":607,"start2":607,"length1":16,"length2":20},{"diffs":[[0,"    "],[1,"    "],[0,"while "],[-1,"(Math.abs"],[0,"(error"],[-1,") >"],[1," !="],[0," 0) "]],"start1":660,"start2":660,"length1":32,"length2":27},{"diffs":[[0,"        "],[1,"    "],[0,"speed = "]],"start1":693,"start2":693,"length1":16,"length2":20},{"diffs":[[0,"00 * 30\n"],[1,"    "],[0,"        "]],"start1":723,"start2":723,"length1":16,"length2":20},{"diffs":[[0,"eft\n            "],[1,"    "],[0,"if (error < 0) {"]],"start1":760,"start2":760,"length1":32,"length2":36},{"diffs":[[0," (error "],[-1,"<"],[1,">"],[0," 0) {\n  "]],"start1":782,"start2":782,"length1":17,"length2":17},{"diffs":[[0,"                "],[1,"    "],[0,"CutebotPro.pwmCr"]],"start1":797,"start2":797,"length1":32,"length2":36},{"diffs":[[0,"            "],[-1,"basic.pause(10)"],[1,"}"],[0,"\n           "]],"start1":868,"start2":868,"length1":39,"length2":25},{"diffs":[[0,"  }\n            "],[-1,"}"],[1,"    "],[0,"\n            \n  "]],"start1":878,"start2":878,"length1":33,"length2":36},{"diffs":[[0,"            "],[-1,"\n        "],[0,"    //  too "]],"start1":899,"start2":899,"length1":33,"length2":24},{"diffs":[[0,"ght\n            "],[1,"    "],[0,"if (error > 0) {"]],"start1":929,"start2":929,"length1":32,"length2":36},{"diffs":[[0,"      if (error "],[-1,">"],[1,"<"],[0," 0) {\n"],[1,"    "],[0,"                "]],"start1":943,"start2":943,"length1":39,"length2":43},{"diffs":[[0,"ed)\n            "],[-1,"}\n"],[1,"    }\n    "],[0,"            \n   "]],"start1":1029,"start2":1029,"length1":34,"length2":42},{"diffs":[[0,"   \n            "],[1,"    "],[0,"basic.pause(10)\n"]],"start1":1064,"start2":1064,"length1":32,"length2":36},{"diffs":[[0,"use(10)\n"],[1,"    "],[0,"        "]],"start1":1092,"start2":1092,"length1":16,"length2":20},{"diffs":[[0,"    "],[-1,"}\n"],[0,"    "],[1,"}\n "],[0,"    "],[-1,"//  turn off headlights\n        CutebotPro.turnOffAllHeadlights()\n"],[0,"       "],[-1," "],[0,"//  "]],"start1":1151,"start2":1151,"length1":92,"length2":26},{"diffs":[[0,"d again\n"],[1,"    "],[0,"        "]],"start1":1186,"start2":1186,"length1":16,"length2":20},{"diffs":[[0,"Control("],[-1,"40, 4"],[1,"10, 1"],[0,"0)\n     "]],"start1":1226,"start2":1226,"length1":21,"length2":21},{"diffs":[[0,"    "],[-1,"basic.pause(300)\n    }\n    \n}\n\nCutebotPro.pwmCruiseControl(40, 40)\nbasic.forever(function on_forever2() {\n    onIn_background()\n})\ncontrol.inBackground(function onIn_background2() {\n    "],[1,"}\n        \n    })"],[0,"\n})\n"]],"start1":1246,"start2":1246,"length1":194,"length2":25}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"ile("],[-1,"abs("],[0,"error"],[-1,") >"],[1," !="],[0," 0):"]],"start1":485,"start2":485,"length1":20,"length2":16},{"diffs":[[0,"f error "],[-1,"<"],[1,">"],[0," 0:\n    "]],"start1":578,"start2":578,"length1":17,"length2":17},{"diffs":[[0,"ed)\n"],[-1,"                basic.pause(10)\n"],[0,"    "]],"start1":650,"start2":650,"length1":40,"length2":8},{"diffs":[[0,"       if error "],[-1,">"],[1,"<"],[0," 0:\n            "]],"start1":687,"start2":687,"length1":33,"length2":33},{"diffs":[[0,"et()"],[-1,"\n\n        # turn off headlights\n        CutebotPro.turn_off_all_headlights()"],[0,"\n   "]],"start1":838,"start2":838,"length1":84,"length2":8},{"diffs":[[0,"rol("],[-1,"40, 40)\n        basic.pause(30"],[1,"10, 1"],[0,"0)\n\n"]],"start1":904,"start2":904,"length1":38,"length2":13},{"diffs":[[0,"rol("],[-1,"40, 4"],[1,"10, 1"],[0,"0)\nd"]],"start1":943,"start2":943,"length1":13,"length2":13},{"diffs":[[0,"():\n    "],[1,"c"],[0,"on"],[-1,"I"],[1,"trol.i"],[0,"n_backgr"]],"start1":970,"start2":970,"length1":19,"length2":25},{"diffs":[[0,"kground("],[1,"onIn_background"],[0,")\nbasic."]],"start1":992,"start2":992,"length1":16,"length2":31},{"diffs":[[0,"er2)"],[-1,"\ndef onIn_background2():\n\ncontrol.in_background(onIn_background2)"]],"start1":1039,"start2":1039,"length1":69,"length2":4}]}]},{"timestamp":1744221768751,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"rever2)\n"],[1,"def onIn_background2():\n\ncontrol.in_background(onIn_background2)"]],"start1":1152,"start2":1152,"length1":8,"length2":72}]}]},{"timestamp":1744221770069,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," 3000 * "],[-1,"7"],[1,"3"],[0,"0\n      "]],"start1":573,"start2":573,"length1":17,"length2":17},{"diffs":[[0,"c.pause("],[-1,"2"],[1,"3"],[0,"00)\n    "]],"start1":1153,"start2":1153,"length1":17,"length2":17},{"diffs":[[0,"nd()\n})\n"],[1,"control.inBackground(function onIn_background2() {\n    \n})\n"]],"start1":1272,"start2":1272,"length1":8,"length2":67}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"r/3000)*"],[-1,"7"],[1,"3"],[0,"0\n      "]],"start1":531,"start2":531,"length1":17,"length2":17},{"diffs":[[0,"c.pause("],[-1,"2"],[1,"3"],[0,"00)\n\nCut"]],"start1":1040,"start2":1040,"length1":17,"length2":17},{"diffs":[[0,"orever2)"],[1,"\n"]],"start1":1151,"start2":1151,"length1":8,"length2":9}]}]},{"timestamp":1744222363611,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"abs("],[-1,"CutebotPro.getOffset()) > 0) {\n            error = CutebotPro.getOffset()"],[1,"error) > 0) {"],[0,"\n   "]],"start1":528,"start2":528,"length1":81,"length2":21},{"diffs":[[0," 3000 * "],[-1,"4"],[1,"7"],[0,"0\n      "]],"start1":573,"start2":573,"length1":17,"length2":17},{"diffs":[[0,"        "],[-1,"    basic.pause(10)"],[1,"}"],[0,"\n       "]],"start1":890,"start2":890,"length1":35,"length2":17},{"diffs":[[0,"  }\n            "],[-1,"}"],[0,"\n            \n  "]],"start1":896,"start2":896,"length1":33,"length2":32},{"diffs":[[0,"   \n            "],[1,"basic.pause(10)"],[0,"\n            Cut"]],"start1":909,"start2":909,"length1":32,"length2":47},{"diffs":[[0,"(10)\n           "],[1," error ="],[0," CutebotPro.pwmC"]],"start1":936,"start2":936,"length1":32,"length2":40},{"diffs":[[0,"Pro."],[-1,"pwmCruiseControl(0, 0)\n            basic.pause(20"],[1,"getOffset("],[0,")\n  "]],"start1":968,"start2":968,"length1":57,"length2":18},{"diffs":[[0,"Control("],[-1,"10, 1"],[1,"40, 4"],[0,"0)\n     "]],"start1":1125,"start2":1125,"length1":21,"length2":21},{"diffs":[[0,"c.pause("],[-1,"10"],[1,"2"],[0,"00)\n    "]],"start1":1153,"start2":1153,"length1":18,"length2":17},{"diffs":[[0,"rol("],[-1,"10, 1"],[1,"40, 4"],[0,"0)\nb"]],"start1":1204,"start2":1204,"length1":13,"length2":13}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"abs("],[-1,"CutebotPro.get_offset()) > 0):\n            error = CutebotPro.get_offset()"],[1,"error) > 0):"],[0,"\n   "]],"start1":489,"start2":489,"length1":82,"length2":20},{"diffs":[[0,"r/3000)*"],[-1,"4"],[1,"7"],[0,"0\n      "]],"start1":531,"start2":531,"length1":17,"length2":17},{"diffs":[[0,"ed)\n            "],[-1,"    "],[0,"basic.pause(10)\n"]],"start1":803,"start2":803,"length1":36,"length2":32},{"diffs":[[0,"(10)\n           "],[1," error ="],[0," CutebotPro.pwm_"]],"start1":830,"start2":830,"length1":32,"length2":40},{"diffs":[[0,"Pro."],[-1,"pwm_cruise_control(0, 0)\n            basic.pause(20"],[1,"get_offset("],[0,")\n\n "]],"start1":862,"start2":862,"length1":59,"length2":19},{"diffs":[[0,"control("],[-1,"10, 1"],[1,"40, 4"],[0,"0)\n     "]],"start1":1012,"start2":1012,"length1":21,"length2":21},{"diffs":[[0,"c.pause("],[-1,"10"],[1,"2"],[0,"00)\n\nCut"]],"start1":1040,"start2":1040,"length1":18,"length2":17},{"diffs":[[0,"rol("],[-1,"10, 1"],[1,"40, 4"],[0,"0)\nd"]],"start1":1080,"start2":1080,"length1":13,"length2":13}]}]},{"timestamp":1744222961689,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," 3000 * "],[-1,"5"],[1,"4"],[0,"0\n      "]],"start1":633,"start2":633,"length1":17,"length2":17},{"diffs":[[0,"/  t"],[-1,"urn righ"],[1,"oo far lef"],[0,"t\n  "]],"start1":657,"start2":657,"length1":16,"length2":18},{"diffs":[[0,") {\n"],[-1,"                // turn on right headlight(blue = 51, 255, 252)\n                CutebotPro.singleHeadlights(CutebotProRGBLight.RGBR, 51, 255, 252)\n"],[0,"    "]],"start1":698,"start2":698,"length1":155,"length2":8},{"diffs":[[0,"use("],[-1,"2"],[1,"1"],[0,"0)\n"],[-1,"                //  turn off headlights\n                CutebotPro.turnOffAllHeadlights()\n"],[0,"    "]],"start1":789,"start2":789,"length1":102,"length2":12},{"diffs":[[0,"/  t"],[-1,"urn lef"],[1,"oo far righ"],[0,"t\n  "]],"start1":837,"start2":837,"length1":15,"length2":19},{"diffs":[[0,"    "],[-1,"// turn on left headlight(blue = 51, 255, 252)\n                CutebotPro.singleHeadlights(CutebotProRGBLight.RGBL, 51, 255, 252)\n                CutebotPro.pwmCruiseControl(-1 * speed, speed)\n                basic.pause(20)\n                //  turn off headlights\n                CutebotPro.turnOffAllHeadlights("],[1,"CutebotPro.pwmCruiseControl(-1 * speed, speed)\n                basic.pause(10"],[0,")\n  "]],"start1":895,"start2":895,"length1":321,"length2":85}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"r/3000)*"],[-1,"5"],[1,"4"],[0,"0\n      "]],"start1":593,"start2":593,"length1":17,"length2":17},{"diffs":[[0," # t"],[-1,"urn righ"],[1,"oo far lef"],[0,"t\n  "]],"start1":615,"start2":615,"length1":16,"length2":18},{"diffs":[[0," 0:\n"],[-1,"                #turn on right headlight(blue = 51, 255, 252)\n                CutebotPro.single_headlights(CutebotProRGBLight.RGBR, 51, 255, 252)\n"],[0,"    "]],"start1":653,"start2":653,"length1":154,"length2":8},{"diffs":[[0,"basic.pause("],[-1,"2"],[1,"1"],[0,"0)\n"],[-1,"    "],[0,"            "]],"start1":736,"start2":736,"length1":32,"length2":28},{"diffs":[[0," # t"],[-1,"urn off headlights\n                CutebotPro.turn_off_all_headlights()\n            # turn left\n            if error > 0:\n                #turn on left headlight(blue = 51, 255, 252)\n                CutebotPro.single_headlights(CutebotProRGBLight.RGBL, 51, 255, 252)"],[1,"oo far right\n            if error > 0:"],[0,"\n   "]],"start1":763,"start2":763,"length1":274,"length2":46},{"diffs":[[0,"use("],[-1,"2"],[1,"1"],[0,"0)\n"],[-1,"                # turn off headlights\n                CutebotPro.turn_off_all_headlights()\n\n"],[0,"    "]],"start1":893,"start2":893,"length1":104,"length2":12}]}]},{"timestamp":1744223479208,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ed ="],[-1," 10 +"],[0," err"]],"start1":621,"start2":621,"length1":13,"length2":8},{"diffs":[[0," 3000 * "],[-1,"7"],[1,"5"],[0,"0\n      "]],"start1":633,"start2":633,"length1":17,"length2":17},{"diffs":[[0," (error "],[-1,">"],[1,"<"],[0," 0) {\n  "]],"start1":685,"start2":685,"length1":17,"length2":17},{"diffs":[[0,"      if (error "],[-1,"<"],[1,">"],[0," 0) {\n          "]],"start1":1091,"start2":1091,"length1":33,"length2":33},{"diffs":[[0,"Control("],[-1,"20, 2"],[1,"10, 1"],[0,"0)\n     "]],"start1":1687,"start2":1687,"length1":21,"length2":21},{"diffs":[[0,"rol("],[-1,"20, 2"],[1,"10, 1"],[0,"0)\nb"]],"start1":1767,"start2":1767,"length1":13,"length2":13}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"ed ="],[-1," 10 +"],[0," (er"]],"start1":583,"start2":583,"length1":13,"length2":8},{"diffs":[[0,"r/3000)*"],[-1,"7"],[1,"5"],[0,"0\n      "]],"start1":593,"start2":593,"length1":17,"length2":17},{"diffs":[[0,"f error "],[-1,">"],[1,"<"],[0," 0:\n    "]],"start1":642,"start2":642,"length1":17,"length2":17},{"diffs":[[0,"       if error "],[-1,"<"],[1,">"],[0," 0:\n            "]],"start1":1016,"start2":1016,"length1":33,"length2":33},{"diffs":[[0,"control("],[-1,"20, 2"],[1,"10, 1"],[0,"0)\n     "]],"start1":1578,"start2":1578,"length1":21,"length2":21},{"diffs":[[0,"rol("],[-1,"20, 2"],[1,"10, 1"],[0,"0)\nd"]],"start1":1647,"start2":1647,"length1":13,"length2":13}]}]},{"timestamp":1744224044116,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ion "],[-1,"straighten_to_line() {\n    let error: number;\n    let speed: number;\n    // keep counter to break while loop\n    let count = 0\n    CutebotPro.pwmCruiseControl(0, 0)\n    basic.pause(100)\n    //  turn on headlights(pink = 247, 25, 236)\n    CutebotPro.singleHeadlights(CutebotProRGBLight.RGBL, 247, 25, 236)\n    CutebotPro.singleHeadlights(CutebotProRGBLight.RGBR, 247, 25, 236)\n    // keep turning till we are straight\n    while (Math.abs(CutebotPro.getOffset()) > 0 || count < 20) {\n        //  update count of while loop iterations\n        count = count + 1\n        // get offset\n        error = CutebotPro.getOffset()\n        //  set turn speed\n        speed = 30 + error / 3000 * 70\n        //  turn right\n        if (error > 0) {\n            // turn on right headlight(blue = 51, 255, 252)\n            CutebotPro.singleHeadlights(CutebotProRGBLight.RGBR, 51, 255, 252)\n            CutebotPro.pwmCruiseControl(speed, -1 * speed)\n            basic.pause(30)\n            //  turn off headlights\n            CutebotPro.turnOffAllHeadlights()\n        }\n        \n        //  turn left\n        if (error < 0) {\n            // turn on left headlight(blue = 51, 255, 252)\n            CutebotPro.singleHeadlights(CutebotProRGBLight.RGBL, 51, 255, 252)\n            CutebotPro.pwmCruiseControl(-1 * speed, speed)\n            basic.pause(30)\n            //  turn off headlights\n            CutebotPro.turnOffAllHeadlights()\n        }\n        \n        CutebotPro.pwmCruiseControl(0, 0)\n        basic.pause(20)\n    }\n    //  turn off headlights\n    CutebotPro.turnOffAllHeadlights()\n    //  go forward again\n    CutebotPro.pwmCruiseControl(20, 20)\n    basic.pause(1000)\n}\n\nfunction detect_line() {\n    let count: number;"],[1,"onIn_background() {"],[0,"\n   "]],"start1":5,"start2":5,"length1":1716,"length2":27},{"diffs":[[0,") {\n"],[-1,"        // keep counter to break while loop\n        count = 0\n"],[0,"    "]],"start1":190,"start2":190,"length1":70,"length2":8},{"diffs":[[0," > 0"],[-1," || count < 20"],[0,") {\n"],[-1,"            //  update count of while loop iterations\n            count = count + 1\n            // get offset\n"],[0,"    "]],"start1":555,"start2":555,"length1":136,"length2":12},{"diffs":[[0,"t()\n"],[-1,"            //  set turn speed\n"],[0,"    "]],"start1":602,"start2":602,"length1":39,"length2":8},{"diffs":[[0,"speed = "],[-1,"3"],[1,"1"],[0,"0 + erro"]],"start1":618,"start2":618,"length1":17,"length2":17},{"diffs":[[0,"    basic.pause("],[-1,"3"],[1,"2"],[0,"0)\n             "]],"start1":927,"start2":927,"length1":33,"length2":33},{"diffs":[[0,"c.pause("],[-1,"3"],[1,"2"],[0,"0)\n     "]],"start1":1348,"start2":1348,"length1":17,"length2":17},{"diffs":[[0,"    "],[-1,"detect_line"],[1,"onIn_background"],[0,"()\n}"]],"start1":1823,"start2":1823,"length1":19,"length2":23}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"def "],[-1,"straighten_to_line():\n    #keep counter to break while loop\n    count = 0\n\n    CutebotPro.pwm_cruise_control(0, 0)\n    basic.pause(100)\n\n    # turn on headlights(pink = 247, 25, 236)\n    CutebotPro.single_headlights(CutebotProRGBLight.RGBL, 247, 25, 236)\n    CutebotPro.single_headlights(CutebotProRGBLight.RGBR, 247, 25, 236)\n    #keep turning till we are straight\n    while(abs(CutebotPro.get_offset()) > 0 or count < 20):\n        # update count of while loop iterations\n        count = count + 1\n        #get offset\n        error = CutebotPro.get_offset()\n        # set turn speed\n        speed = 30 + (error/3000)*70\n        # turn right\n        if error > 0:\n            #turn on right headlight(blue = 51, 255, 252)\n            CutebotPro.single_headlights(CutebotProRGBLight.RGBR, 51, 255, 252)\n            CutebotPro.pwm_cruise_control(speed, -1*speed)\n            basic.pause(30)\n            # turn off headlights\n            CutebotPro.turn_off_all_headlights()\n        # turn left\n        if error < 0:\n            #turn on left headlight(blue = 51, 255, 252)\n            CutebotPro.single_headlights(CutebotProRGBLight.RGBL, 51, 255, 252)\n            CutebotPro.pwm_cruise_control(-1*speed, speed)\n                    basic.pause(30)\n            # turn off headlights\n                    CutebotPro.turn_off_all_headlights()\n\n                CutebotPro.pwm_cruise_control(0, 0)\n                basic.pause(20)\n\n            # turn off headlights\n            CutebotPro.turn_off_all_headlights()\n            # go forward again\n            CutebotPro.pwm_cruise_control(20, 20)\n            basic.pause(1000)\ndef detect_line"],[1,"onIn_background"],[0,"():\n"]],"start1":0,"start2":0,"length1":1640,"length2":23},{"diffs":[[0,"000:"],[-1,"\n        #keep counter to break while loop\n        count = 0"],[0,"\n\n  "]],"start1":154,"start2":154,"length1":68,"length2":8},{"diffs":[[0," > 0"],[-1," or count < 20"],[0,"):\n"],[-1,"            # update count of while loop iterations\n            count = count + 1\n            #get offset\n"],[0,"    "]],"start1":517,"start2":517,"length1":131,"length2":11},{"diffs":[[0,"t()\n"],[-1,"            # set turn speed\n"],[0,"    "]],"start1":564,"start2":564,"length1":37,"length2":8},{"diffs":[[0,"speed = "],[-1,"3"],[1,"1"],[0,"0 + (err"]],"start1":580,"start2":580,"length1":17,"length2":17},{"diffs":[[0,"    basic.pause("],[-1,"3"],[1,"2"],[0,"0)\n             "]],"start1":881,"start2":881,"length1":33,"length2":33},{"diffs":[[0,"c.pause("],[-1,"3"],[1,"2"],[0,"0)\n     "]],"start1":1270,"start2":1270,"length1":17,"length2":17},{"diffs":[[0,"    "],[-1,"detect_line"],[1,"onIn_background"],[0,"()\nb"]],"start1":1683,"start2":1683,"length1":19,"length2":23}]}]},{"timestamp":1744224643850,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"AllHeadlights()\n"],[1,"        }\n        \n        CutebotPro.pwmCruiseControl(0, 0)\n        basic.pause(20)\n    }\n    //  turn off headlights\n    CutebotPro.turnOffAllHeadlights()\n    //  go forward again\n    CutebotPro.pwmCruiseControl(20, 20)\n    basic.pause(1000)\n}\n\nfunction detect_line() {\n    let count: number;\n    let speed: number;\n    \n    //  get the line tracking offset\n    let error = CutebotPro.getOffset()\n    //  detects black line\n    if (Math.abs(error) < 3000) {\n        // keep counter to break while loop\n        count = 0\n        CutebotPro.pwmCruiseControl(0, 0)\n        basic.pause(100)\n        //  turn on headlights(pink = 247, 25, 236)\n        CutebotPro.singleHeadlights(CutebotProRGBLight.RGBL, 247, 25, 236)\n        CutebotPro.singleHeadlights(CutebotProRGBLight.RGBR, 247, 25, 236)\n        // keep turning till we are straight\n        while (Math.abs(CutebotPro.getOffset()) > 0 || count < 20) {\n            //  update count of while loop iterations\n            count = count + 1\n            // get offset\n            error = CutebotPro.getOffset()\n            //  set turn speed\n            speed = 30 + error / 3000 * 70\n            //  turn right\n            if (error > 0) {\n                // turn on right headlight(blue = 51, 255, 252)\n                CutebotPro.singleHeadlights(CutebotProRGBLight.RGBR, 51, 255, 252)\n                CutebotPro.pwmCruiseControl(speed, -1 * speed)\n                basic.pause(30)\n                //  turn off headlights\n                CutebotPro.turnOffAllHeadlights()\n            }\n            \n            //  turn left\n            if (error < 0) {\n                // turn on left headlight(blue = 51, 255, 252)\n                CutebotPro.singleHeadlights(CutebotProRGBLight.RGBL, 51, 255, 252)\n                CutebotPro.pwmCruiseControl(-1 * speed, speed)\n                basic.pause(30)\n                //  turn off headlights\n                CutebotPro.turnOffAllHeadlights()\n            }\n            \n"],[0,"            Cute"]],"start1":1407,"start2":1407,"length1":32,"length2":1992},{"diffs":[[0,"seControl(0, 0)\n"],[-1,""],[0,"            basi"]],"start1":3413,"start2":3413,"length1":32,"length2":32},{"diffs":[[0,")\n        }\n"],[-1,"        \n"],[0,"        //  "]],"start1":3455,"start2":3455,"length1":33,"length2":24},{"diffs":[[0,")\n    }\n"],[1,"    \n"],[0,"}\n\nCuteb"]],"start1":3638,"start2":3638,"length1":16,"length2":21},{"diffs":[[0,"20)\n"],[-1,"function on_forever(): () => void {\n    basic.forever(function detect_line(): number {\n        //  get the line tracking offset\n        let error = CutebotPro.getOffset()\n        //  detects black line\n        if (Math.abs(error) < 3000) {\n            straighten_to_line()\n        }\n        \n        return error\n    })\n}\n\ncontrol.inBackground(on_forever()"],[1,"basic.forever(function on_forever2() {\n    detect_line()\n}"],[0,")\n"]],"start1":3686,"start2":3686,"length1":362,"length2":64}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"ed)\n            "],[1,"        "],[0,"basic.pause(30)\n"]],"start1":1210,"start2":1210,"length1":32,"length2":40},{"diffs":[[0,"hts\n            "],[1,"      "],[1,"  "],[0,"CutebotPro.turn_"]],"start1":1280,"start2":1280,"length1":32,"length2":40},{"diffs":[[0,"()\n\n            "],[1,"    "],[0,"CutebotPro.pwm_c"]],"start1":1338,"start2":1338,"length1":32,"length2":36},{"diffs":[[0," 0)\n            "],[1," "],[1,"   "],[0,"basic.pause(20)\n"]],"start1":1390,"start2":1390,"length1":32,"length2":36},{"diffs":[[0,"se(20)\n\n        "],[1,"   "],[1," "],[0,"# turn off headl"]],"start1":1419,"start2":1419,"length1":32,"length2":36},{"diffs":[[0," off headlights\n"],[1,"    "],[0,"        CutebotP"]],"start1":1445,"start2":1445,"length1":32,"length2":36},{"diffs":[[0,"        "],[1,"  "],[1,"  "],[0,"# go for"]],"start1":1510,"start2":1510,"length1":16,"length2":20},{"diffs":[[0,"d again\n"],[1,"    "],[0,"        "]],"start1":1533,"start2":1533,"length1":16,"length2":20},{"diffs":[[0,"20, 20)\n        "],[1,"    "],[0,"basic.pause(1000"]],"start1":1583,"start2":1583,"length1":32,"length2":36},{"diffs":[[0,"e(1000)\n"],[-1,"\n"],[0,"def dete"]],"start1":1613,"start2":1613,"length1":17,"length2":16},{"diffs":[[0,"ect_line():\n"],[1,"    pass\n"],[0,"    # get th"]],"start1":1628,"start2":1628,"length1":24,"length2":33},{"diffs":[[0,"    "],[-1,"straighten_to_line()\n    return error\nCutebotPro.pwm_cruise_control(20, 20)\ndef on_forever():\n    basic.forever(detect_line)\n\ncontrol.in_background("],[1,"#keep counter to break while loop\n        count = 0\n\n        CutebotPro.pwm_cruise_control(0, 0)\n        basic.pause(100)\n\n        # turn on headlights(pink = 247, 25, 236)\n        CutebotPro.single_headlights(CutebotProRGBLight.RGBL, 247, 25, 236)\n        CutebotPro.single_headlights(CutebotProRGBLight.RGBR, 247, 25, 236)\n        #keep turning till we are straight\n        while(abs(CutebotPro.get_offset()) > 0 or count < 20):\n            # update count of while loop iterations\n            count = count + 1\n            #get offset\n            error = CutebotPro.get_offset()\n            # set turn speed\n            speed = 30 + (error/3000)*70\n            # turn right\n            if error > 0:\n                #turn on right headlight(blue = 51, 255, 252)\n                CutebotPro.single_headlights(CutebotProRGBLight.RGBR, 51, 255, 252)\n                CutebotPro.pwm_cruise_control(speed, -1*speed)\n                basic.pause(30)\n                # turn off headlights\n                CutebotPro.turn_off_all_headlights()\n            # turn left\n            if error < 0:\n                #turn on left headlight(blue = 51, 255, 252)\n                CutebotPro.single_headlights(CutebotProRGBLight.RGBL, 51, 255, 252)\n                CutebotPro.pwm_cruise_control(-1*speed, speed)\n                basic.pause(30)\n                # turn off headlights\n                CutebotPro.turn_off_all_headlights()\n\n            CutebotPro.pwm_cruise_control(0, 0)\n            basic.pause(20)\n\n        # turn off headlights\n        CutebotPro.turn_off_all_headlights()\n        # go forward again\n        CutebotPro.pwm_cruise_control(20, 20)\n        basic.pause(1000)\n\nCutebotPro.pwm_cruise_control(20, 20)\ndef "],[0,"on_f"]],"start1":1780,"start2":1780,"length1":156,"length2":1718},{"diffs":[[0,"ever"],[1,"2"],[0,"()"],[1,":\n    detect_line()\nbasic.forever(on_forever2"],[0,")"],[-1,"\n"]],"start1":3500,"start2":3500,"length1":8,"length2":53}]}]},{"timestamp":1744225291273,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"():\n    "],[1,"basic.forever("],[0,"detect_l"]],"start1":1822,"start2":1822,"length1":16,"length2":30}]}]},{"timestamp":1744225314328,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"art\""],[-1," id=\"sP+u$U/u!Dy~gbNCp;@F\""],[0," x=\""]],"start1":100,"start2":100,"length1":34,"length2":8},{"diffs":[[0,"ver\""],[-1," id=\"ZB@r?TN8Uh7I|}+I4p{+\""],[0," x=\""]],"start1":151,"start2":151,"length1":34,"length2":8}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"// This code will stop the robot when it detects a line and get it (mostly) straight \n//  according to the line. Perhaps make it so \n"],[0,"func"]],"start1":0,"start2":0,"length1":137,"length2":4},{"diffs":[[0,"20, 20)\n"],[1,"function on_forever(): () => void {\n    "],[0,"basic.fo"]],"start1":1726,"start2":1726,"length1":16,"length2":56},{"diffs":[[0,"etect_line()"],[-1," {\n"],[1,": number {\n    "],[0,"    //  get "]],"start1":1798,"start2":1798,"length1":27,"length2":39},{"diffs":[[0," offset\n    "],[1," "],[1,"   "],[0,"let error = "]],"start1":1854,"start2":1854,"length1":24,"length2":28},{"diffs":[[0,"getOffset()\n"],[1,"    "],[0,"    //  dete"]],"start1":1893,"start2":1893,"length1":24,"length2":28},{"diffs":[[0,"ck line\n    "],[1,"  "],[1,"  "],[0,"if (Math.abs"]],"start1":1928,"start2":1928,"length1":24,"length2":28},{"diffs":[[0,"        "],[1,"    "],[0,"straight"]],"start1":1974,"start2":1974,"length1":16,"length2":20},{"diffs":[[0,"    "],[1,"  "],[-1,"}\n    \n}"],[1,"  }\n        \n        return error\n    })\n}\n\ncontrol.inBackground(on_forever()"],[0,")\n"]],"start1":2007,"start2":2007,"length1":14,"length2":85}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":339,"start2":339,"length1":52,"length2":8}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[-1,"#This code will stop the robot when it detects a line and get it (mostly) straight \n# according to the line. Perhaps make it so \n\n"],[0,"def "]],"start1":0,"start2":0,"length1":134,"length2":4},{"diffs":[[0,"_line()\n"],[-1,"\n"],[1,"    return error"],[0,"\nCutebot"]],"start1":1745,"start2":1745,"length1":17,"length2":32},{"diffs":[[0,"20)\n"],[-1,"basic."],[1,"def on_"],[0,"forever("],[1,"):\n    "],[0,"dete"]],"start1":1804,"start2":1804,"length1":22,"length2":30},{"diffs":[[0,"t_line)\n"],[1,"\ncontrol.in_background(on_forever())\n"]],"start1":1835,"start2":1835,"length1":8,"length2":45}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1744219474094,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"straighten robot to line\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1744221305372,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"def onIn_background():\n    pass\n    # get the line tracking offset\n    error = CutebotPro.get_offset()\n    \n    # detects black line\n    if abs(error) < 3000:\n\n        CutebotPro.pwm_cruise_control(0, 0)\n        basic.pause(100)\n\n        # turn on headlights(pink = 247, 25, 236)\n        CutebotPro.single_headlights(CutebotProRGBLight.RGBL, 247, 25, 236)\n        CutebotPro.single_headlights(CutebotProRGBLight.RGBR, 247, 25, 236)\n        #keep turning till we are straight\n        while(abs(error) > 0):\n            speed = (error/3000)*100\n            # too far left\n            if error > 0:\n                CutebotPro.pwm_cruise_control(speed, -1*speed)\n            # too far right\n            if error < 0:\n                CutebotPro.pwm_cruise_control(-1*speed, speed)\n            basic.pause(10)\n            error = CutebotPro.get_offset()\n        # go forward again\n        CutebotPro.pwm_cruise_control(10, 10)\n\nCutebotPro.pwm_cruise_control(40, 40)\ndef on_forever2():\n    control.in_background(onIn_background)\nbasic.forever(on_forever2)","pxt.json":"{\n    \"name\": \"straighten robot to line\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-cutebotpro\": \"github:elecfreaks/pxt-cutebot-pro#v2.1.0\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1744223153321,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"def onIn_background():\n    pass\n    # get the line tracking offset\n    error = CutebotPro.get_offset()\n    \n    # detects black line\n    if abs(error) < 3000:\n\n        CutebotPro.pwm_cruise_control(0, 0)\n        basic.pause(100)\n\n        # turn on headlights(pink = 247, 25, 236)\n        CutebotPro.single_headlights(CutebotProRGBLight.RGBL, 247, 25, 236)\n        CutebotPro.single_headlights(CutebotProRGBLight.RGBR, 247, 25, 236)\n        #keep turning till we are straight\n        while(abs(CutebotPro.get_offset()) > 0):\n            error = CutebotPro.get_offset()\n            speed = (error/3000)*70\n            # too far left\n            if error < 0:\n                CutebotPro.pwm_cruise_control(speed, -1*speed)\n                basic.pause(10)\n            # too far right\n            if error > 0:\n                CutebotPro.pwm_cruise_control(-1*speed, speed)\n                basic.pause(10)\n            CutebotPro.pwm_cruise_control(0, 0)\n            basic.pause(20)\n\n        # turn off headlights\n        CutebotPro.turn_off_all_headlights()\n        # go forward again\n        CutebotPro.pwm_cruise_control(10, 10)\n        basic.pause(1000)\n\nCutebotPro.pwm_cruise_control(10, 10)\ndef on_forever2():\n    onIn_background()\nbasic.forever(on_forever2)","pxt.json":"{\n    \"name\": \"straighten robot to line\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-cutebotpro\": \"github:elecfreaks/pxt-cutebot-pro#v2.1.0\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1744224953592,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"def straighten_to_line():\n    #keep counter to break while loop\n    count = 0\n\n    CutebotPro.pwm_cruise_control(0, 0)\n    basic.pause(100)\n\n    # turn on headlights(pink = 247, 25, 236)\n    CutebotPro.single_headlights(CutebotProRGBLight.RGBL, 247, 25, 236)\n    CutebotPro.single_headlights(CutebotProRGBLight.RGBR, 247, 25, 236)\n    #keep turning till we are straight\n    while(abs(CutebotPro.get_offset()) > 0 or count < 20):\n        # update count of while loop iterations\n        count = count + 1\n        #get offset\n        error = CutebotPro.get_offset()\n        # set turn speed\n        speed = 30 + (error/3000)*70\n        # turn right\n        if error > 0:\n            #turn on right headlight(blue = 51, 255, 252)\n            CutebotPro.single_headlights(CutebotProRGBLight.RGBR, 51, 255, 252)\n            CutebotPro.pwm_cruise_control(speed, -1*speed)\n            basic.pause(30)\n            # turn off headlights\n            CutebotPro.turn_off_all_headlights()\n        # turn left\n        if error < 0:\n            #turn on left headlight(blue = 51, 255, 252)\n            CutebotPro.single_headlights(CutebotProRGBLight.RGBL, 51, 255, 252)\n            CutebotPro.pwm_cruise_control(-1*speed, speed)\n            basic.pause(30)\n            # turn off headlights\n            CutebotPro.turn_off_all_headlights()\n\n            CutebotPro.pwm_cruise_control(0, 0)\n            basic.pause(20)\n\n        # turn off headlights\n        CutebotPro.turn_off_all_headlights()\n        # go forward again\n        CutebotPro.pwm_cruise_control(20, 20)\n        basic.pause(1000)\n\ndef detect_line():\n    # get the line tracking offset\n    error = CutebotPro.get_offset()\n    \n    # detects black line\n    if abs(error) < 3000:\n        straighten_to_line()\n    return error\nCutebotPro.pwm_cruise_control(20, 20)\ndef on_forever2():\n    detect_line()\nbasic.forever(on_forever2)\n\ncontrol.in_background(on_)","pxt.json":"{\n    \"name\": \"straighten robot to line - Copy\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-cutebotpro\": \"github:elecfreaks/pxt-cutebot-pro#v2.1.0\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}}],"shares":[],"lastSaveTime":1744225752697}